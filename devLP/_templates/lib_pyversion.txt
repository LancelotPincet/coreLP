#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Date          : template_date
Author        : Lancelot PINCET
GitHub        : https://github.com/LancelotPincet
Description   : Create new script for template_name
"""



# %% Libraries
from devlp import path
import subprocess
from pathlib import Path



# %% Main function
def main() :
    print('\nRunning upload_newversion :')

    # Push pythonLP
    subprocess.run(["git", "subtree", "push", "--prefix=libsLP/template_name", "template_name", "main"], cwd=path.parent, stdout=subprocess.PIPE, text=True)
    print('     pushed newversion to individual repository)

    # Build project
    subprocess.run(["uv", "build"], cwd=path.parent\libsLP\template_name, stdout=subprocess.PIPE, text=True)
    print('     project built')

    # Get PyPI tokens
    with open(Path.home() / 'LancelotPincet_uv-publish.testpypi_token) as file :
        test_token = file.read()
    print(f'     Got TestPyPI token : {test_token})
    with open(Path.home() / 'LancelotPincet_uv-publish.pypi_token) as file :
        token = file.read()
    print(f'     Got PyPI token : {token})

    # Publish TestPyPI
    subprocess.run(["uv", "publish", "--token", test_token, "--publish-url", "https://test.pypi.org/legacy/"], cwd=path.parent\libsLP\template_name, stdout=subprocess.PIPE, text=True)
    print("     published to TestPyPI)
    subprocess.run(["uv", "run", "--with", template_name, "--no-project", "--", "python", "-c", '"import template_lowername"'], cwd=path.parent\libsLP\template_name, stdout=subprocess.PIPE, text=True)
    print('     test from TestPyPI import successful')
    
    # Publish PyPI
    subprocess.run(["uv", "publish", "--token", token], cwd=path.parent\libsLP\template_name, stdout=subprocess.PIPE, text=True)
    print("     published to PyPI)
    subprocess.run(["uv", "run", "--with", template_name, "--no-project", "--", "python", "-c", '"import template_lowername"'], cwd=path.parent\libsLP\template_name, stdout=subprocess.PIPE, text=True)
    print('     test from PyPI import successful')
    
    # Bump version number
    subprocess.run(["uv", "version", "--bump", "patch"], cwd=path.parent\libsLP\template_name, stdout=subprocess.PIPE, text=True)
    print("     bumped patch version)

    # End
    print('upload_newversion finished!\n')



# %% Main function run
if __name__ == "__main__":
    main()